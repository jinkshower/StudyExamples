-- 서울의 음식타입, 평균가격 
SELECT cuisine_type,
		avg(price) avg_price,
		substr(addr, 1, 2) sido
FROM food_orders fo 
where substr(addr, 1, 2) = "서울"
group by 1

-- 이메일 도메인별 고객수 평균 연령
SELECT substr(email, 10) split_email,
	   count(customer_id) user_count,
	   avg(age) avg_age
FROM customers c
group by substr(email, 10)

-- ‘[지역(시도)] 음식점이름 (음식종류)’ 컬럼을 만들고, 총 주문건수 구하기
SELECT CONCAT('[', substr(addr, 1, 2), ']', restaurant_name, ' (', cuisine_type, ')') changed_name, 
		count(1) order_count
FROM food_orders fo 
group by 1

-- 음식 타입을 ‘Korean’ 일 때는 ‘한식’, ‘Korean’ 이 아닌 경우에는 ‘기타’ 라고 지정
SELECT restaurant_name ,
		cuisine_type ,
		if(cuisine_type='Korean', "한식", "기타") change_type
FROM food_orders fo 

-- 10세 이상, 30세 미만의 고객의 나이와 성별로 그룹 나누기 (이름도 같이 출력)
select name,
       age,
       gender,
       case when (age between 10 and 19) and gender='male' then "10대 남자"
            when (age between 10 and 19) and gender='female' then "10대 여자"
            when (age between 20 and 29) and gender='male' then "20대 남자"
            when (age between 20 and 29) and gender='female' then "20대 여자" end "그룹" 
from customers
where age between 10 and 29

-- 지역과 배달시간을 기반으로 배달수수료 구하기 (식당 이름, 주문 번호 함께 출력)
SELECT restaurant_name ,
		order_id ,
		delivery_time ,
		price,
		addr,
		case when delivery_time > 30 then price * 1.1 * if(addr like '%서울', 1.1, 1)
			 when delivery_time > 25 then price * 1.05 * if(addr like '%서울', 1.1, 1)
			 else 0 end vat
FROM food_orders fo 

--  주문 시기와 음식 수를 기반으로 배달할증료 구하기
SELECT order_id ,
		price,
		quantity ,
		day_of_the_week ,
		case when day_of_the_week = 'Weekday' then 3000 * if(quantity > 3, 1.2, 1)
			 when day_of_the_week = 'Weekend' then 3500 * if(quantity > 3, 1.2, 1) end deli_fee
FROM food_orders fo 
